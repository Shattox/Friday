{"version":3,"sources":["context/GlobalContext.js","components/Header.js","utils/Function.js","components/SignIn.js","components/SignUp.js","assets/logo.png","components/calendar/CalendarHeader.js","components/calendar/Labels.js","assets/plus.svg","components/calendar/CreateEventButton.js","assets/account.png","components/calendar/GoogleButton.js","components/calendar/SideBar.js","components/calendar/Day.js","components/calendar/Month.js","utils/date.js","components/calendar/TimePicker.js","components/calendar/EventModal.js","components/calendar/DistanceMatrix.js","components/calendar/Calendar.js","components/SmartInformation.js","components/Events.js","components/Home.js","App.js","reportWebVitals.js","context/ContextWrapper.js","index.js"],"names":["GlobalContext","React","createContext","monthIndex","setMonthIndex","index","showEventModal","setShowEventModal","daySelected","setDaySelected","day","dispatchCallEvent","type","payload","savedEvents","selectedEvent","setSelectedEvent","labels","setLabels","updateLabel","filteredEvents","idMember","setIdMember","id","Header","isLoggedIn","onLoggedInChange","useContext","className","to","onClick","event","preventDefault","deleteEvent","fetch","method","headers","then","response","json","getEventsFromApi","events","i","length","startDate","Date","substring","endDate","startHour","dateToFormat","getHours","startMinute","getMinutes","endHour","endMinute","toLocaleDateString","date","toString","buildEventDate","newDate","split","SignIn","history","useHistory","useState","email","setEmail","password","setPassword","failure","setFailure","onSubmit","status","member","push","htmlFor","name","placeholder","autoComplete","onChange","e","target","value","required","SignUp","firstName","setFirstName","lastName","setLastName","r","CalendarHeader","year","getFullYear","src","logo","alt","getMonth","size","Labels","Fragment","map","lbl","label","checked","CreateEventButton","plusSvg","GoogleButton","resp","splice","account","SideBar","url","console","log","replaceAll","Day","rowIdx","_","repeatedEvents","dayEvents","setDayEvents","useEffect","filter","evt","toLocaleString","toDateString","toUpperCase","today","getDate","displayCurrentDate","title","Month","month","setRepeatedEvents","forEach","eventCopy","endDay","endMonth","endYear","parseInt","repeat","setDate","setMonth","setFullYear","row","firstDayOfTheMonth","getDay","currentMonthCount","daysMatrix","Array","fill","TimePicker","hour","setHour","minute","setMinute","timers","hours","minutes","setHours","setMinutes","EventModal","labelsClasses","allDay","setAllDay","setTitle","location","setLocation","description","setDescription","setRepeat","setEndDate","setStartHour","setEndHour","setStartMinute","setEndMinute","find","selectedLabel","setSelectedLabel","dayStr","reverse","join","newEnDate","viewBox","xmlns","fillRule","d","clipRule","selected","lblClass","DistanceMatrix","latitude","longitude","bicycleDuration","carDuration","distance","localisation","at","Calendar","currentMonth","setCurrentMonth","SmartInformation","timeBeforeEvent","nextEventDate","nextEvent","Math","abs","toLocaleTimeString","hour24","second","timer","setInterval","clearInterval","Events","scope","Home","Component","App","state","handleIsLoggedIn","setState","this","navigator","geolocation","getCurrentPosition","position","coords","save","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","savedEventReducer","is_present","Error","initEvents","storageEvents","localStorage","getItem","JSON","parse","ContextWrapper","props","useReducer","useMemo","includes","setItem","stringify","prevLabels","Set","currentLabel","Provider","children","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11969085.chunk.js","sourcesContent":["import React from 'react';\n\nconst GlobalContext = React.createContext({\n    monthIndex: 0,\n    setMonthIndex: (index) => {},\n    showEventModal: false,\n    setShowEventModal: () => {},\n    daySelected: null,\n    setDaySelected: (day) => {},\n    dispatchCallEvent: ({type, payload}) => {},\n    savedEvents: [],\n    selectedEvent: null,\n    setSelectedEvent: () => {},\n    labels: [],\n    setLabels: () => {},\n    updateLabel: () => {},\n    filteredEvents: [],\n    idMember: 0,\n    setIdMember: (id) => {}\n});\n\nexport default GlobalContext;","import React, {useContext} from 'react';\nimport {Link} from \"react-router-dom\";\nimport GlobalContext from \"../context/GlobalContext\";\n\nexport default function Header({ isLoggedIn, onLoggedInChange }) {\n\n  const {dispatchCallEvent} = useContext(GlobalContext);\n\n  function logOut(event) {\n    event.preventDefault();\n    dispatchCallEvent({type: \"clear\", payload: {}});\n    onLoggedInChange(false);\n  }\n\n  return (\n    <nav className=\"bg-gray-800\">\n      <div className=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\n        <div className=\"relative flex items-center justify-between h-16\">\n          <div className=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\n            <div className=\"flex-shrink-0 flex items-center\">\n              <h2 className=\"text-base text-3xl text-indigo-600 font-extrabold tracking-wide uppercase\">Friday</h2>\n            </div>\n            <div className=\"hidden sm:block sm:ml-6\">\n              <div className=\"flex space-x-4\">\n                <Link to='/' className=\"bg-gray-900 text-white px-3 py-2 rounded-md text-sm font-medium\"\n                      aria-current=\"page\">Home</Link>\n              </div>\n            </div>\n            {isLoggedIn ?\n                <div className=\"hidden md:flex items-center justify-end md:flex-1 lg:w-0\">\n                    <Link to='/' onClick={logOut}\n                          className=\"ml-8 whitespace-nowrap inline-flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-red-600 hover:bg-red-700\">\n                      Sign out\n                    </Link>\n                </div> :\n                <div className=\"hidden md:flex items-center justify-end md:flex-1 lg:w-0\">\n                  <Link to='/SignIn' className=\"whitespace-nowrap text-base font-medium text-gray-500 hover:text-gray-900\">\n                    Sign in</Link>\n                  <Link to='/SignUp'\n                        className=\"ml-8 whitespace-nowrap inline-flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-indigo-600 hover:bg-indigo-700\">\n                    Sign up\n                  </Link>\n                </div>}\n          </div>\n        </div>\n      </div>\n    </nav>\n  )\n}\n","export const deleteEvent = (id) => {\n    fetch(\"http://localhost:8080/DeleteEvent/\" + id,\n        {method: \"POST\", headers: {\"content-type\": \"application/json\"}})\n        .then(response => response.json());\n}\n\nexport const getEventsFromApi = (idMember, dispatchCallEvent, type) => {\n    fetch(\"http://localhost:8080/Events/\" + idMember,\n        {method: 'GET', headers: {\"content-type\": \"application/json\"}})\n        .then(response => {\n            response.json().then(events => {\n                if (events != null) {\n                    for (let i = 0; i < events.length; i++) {\n                        if (typeof events[i].startDate == 'undefined') {\n                            deleteEvent(events[i].id);\n                        } else {\n                            const startDate = new Date(events[i].startDate.substring(0, events[i].startDate.length - 5));\n                            const endDate = new Date(events[i].endDate.substring(0, events[i].endDate.length - 5));\n                            events[i].startHour = dateToFormat(startDate.getHours());\n                            events[i].startMinute = dateToFormat(startDate.getMinutes());\n                            events[i].endHour = dateToFormat(endDate.getHours());\n                            events[i].endMinute = dateToFormat(endDate.getMinutes());\n                            events[i].startDate = new Date(events[i].startDate.substring(0, 10)).toLocaleDateString();\n                            events[i].endDate = new Date(events[i].endDate.substring(0, 10)).toLocaleDateString();\n                            dispatchCallEvent({type: type, payload: events[i]});\n                        }\n                    }\n                }\n            });\n        });\n}\n\nconst dateToFormat = (date) => {\n    return date.toString().length === 2 ? date : '0' + date;\n}\n\nexport const buildEventDate = (event) => {\n    const newDate = event.startDate.split('/');\n    const dateToFormat = newDate[2] + '/' + newDate[1] + '/' + newDate[0];\n    return new Date(dateToFormat + ' ' + event.startHour + ':' + event.startMinute + ':00');\n}","import React, {useContext, useState} from 'react';\nimport {Link, useHistory} from \"react-router-dom\";\nimport GlobalContext from \"../context/GlobalContext\";\nimport {getEventsFromApi} from \"../utils/Function\";\n\nfunction SignIn({ onLoggedInChange }) {\n    const history = useHistory();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [failure, setFailure] = useState(\"\");\n\n    const {dispatchCallEvent, setIdMember} = useContext(GlobalContext);\n\n    const onSubmit = (event) => {\n        event.preventDefault()\n        fetch(\"http://localhost:8080/SignIn/\" + email + \"&\" + password,\n            {method: 'POST', headers: {\"content-type\": \"application/json\"}})\n            .then(response => {\n                if (response.status !== 500) {\n                    response.json().then(member => {\n                        setIdMember(member.id);\n                        getEventsFromApi(member.id, dispatchCallEvent, \"push\");\n                        onLoggedInChange(true);\n                        history.push('/');\n                    })\n                } else {\n                    setFailure(\"Your email or your password is wrong ! Please try again !\");\n                }\n            });\n    }\n\n    return (\n        <div className=\"flex flex-col h-screen bg-gray-100\">\n            <div className=\"grid place-items-center mx-2 my-20 sm:my-auto\">\n                <p className={\"text-red-600\"}>{failure}</p>\n                <div\n                    className=\"w-11/12 p-12 sm:w-8/12 md:w-6/12 lg:w-5/12 2xl:w-4/12 px-6 py-10 sm:px-10 sm:py-6 bg-white rounded-lg shadow-md lg:shadow-lg\">\n                    <h2 className=\"text-center font-semibold text-3xl lg:text-4xl text-gray-800\">Sign In</h2>\n                    <form className=\"mt-10\" onSubmit={onSubmit}>\n                        <label htmlFor=\"email\"\n                               className=\"block text-xs font-semibold text-gray-600 uppercase\">E-mail</label>\n                        <input id=\"email\" type=\"email\" name=\"email\" placeholder=\"e-mail address\" autoComplete=\"email\"\n                               onChange={(e) => setEmail(e.target.value)}\n                               className=\"block w-full py-3 px-1 mt-2\n                    text-gray-800 appearance-none\n                    border-b-2 border-gray-100\n                    focus:text-gray-500 focus:outline-none focus:border-gray-200\"\n                               required/>\n                        <label htmlFor=\"password\"\n                               className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Password</label>\n                        <input id=\"password\" type=\"password\" name=\"password\" placeholder=\"password\"\n                               autoComplete=\"current-password\"\n                               onChange={(e) => setPassword(e.target.value)}\n                               className=\"block w-full py-3 px-1 mt-2 mb-4\n                    text-gray-800 appearance-none\n                    border-b-2 border-gray-100\n                    focus:text-gray-500 focus:outline-none focus:border-gray-200\"\n                               required/>\n                        <button type=\"submit\"\n                                className=\"w-full py-3 mt-10 rounded-sm\n                    font-medium text-white uppercase\n                    focus:outline-none bg-indigo-600 hover:bg-indigo-800 hover:shadow-none\">\n                            Login\n                        </button>\n                        <div className=\"sm:flex sm:flex-wrap mt-8 sm:mb-4 text-sm text-center\">\n                            <Link to=\"/SignUp\" className=\"flex-2 hover:text-indigo-600 underline\">\n                                Create an Account\n                            </Link>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SignIn;","import React, {useState} from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\n\nfunction SignUp() {\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const history = useHistory();\n\n    const onSubmit = (event) => {\n        event.preventDefault()\n        fetch(\"http://localhost:8080/SignUp/\" + firstName + \"&\" + lastName + \"&\" + email + \"&\" + password,\n            {method: 'POST', headers: {\"content-type\": \"application/json\"}})\n            .then(response => response.json().then(r => {\n                if (r === 200) {\n                    history.push('/SignIn');\n                }\n            }));\n    }\n\n    return (\n        <div className=\"flex flex-col h-screen bg-gray-100\">\n            <div className=\"grid place-items-center mx-2 my-20 sm:my-auto\">\n                <div className=\"w-11/12 p-12 sm:w-8/12 md:w-6/12 lg:w-5/12 2xl:w-4/12\n            px-6 py-10 sm:px-10 sm:py-6\n            bg-white rounded-lg shadow-md lg:shadow-lg\">\n                    <h2 className=\"text-center font-semibold text-3xl lg:text-4xl text-gray-800\">Sign Up</h2>\n                    <form className=\"mt-10\" onSubmit={onSubmit}>\n                        <label htmlFor=\"name\" className=\"block text-xs font-semibold text-gray-600 uppercase\">first\n                            name</label>\n                        <input id=\"firstName\" type=\"text\" name=\"firstName\" placeholder=\"first name\"\n                               autoComplete=\"firstName\"\n                               onChange={(e) => setFirstName(e.target.value)}\n                               className=\"block w-full py-3 px-1 mt-2\n                    text-gray-800 appearance-none\n                    border-b-2 border-gray-100\n                    focus:text-gray-500 focus:outline-none focus:border-gray-200\" required/>\n                        <label htmlFor=\"email\" className=\"block text-xs font-semibold text-gray-600 uppercase\">last\n                            name</label>\n                        <input id=\"lastName\" type=\"text\" name=\"lastName\" placeholder=\"last name\" autoComplete=\"lastName\"\n                               onChange={(e) => setLastName(e.target.value)}\n                               className=\"block w-full py-3 px-1 mt-2\n                    text-gray-800 appearance-none\n                    border-b-2 border-gray-100\n                    focus:text-gray-500 focus:outline-none focus:border-gray-200\" required/>\n                        <label htmlFor=\"email\"\n                               className=\"block text-xs font-semibold text-gray-600 uppercase\">E-mail</label>\n                        <input id=\"email\" type=\"email\" name=\"email\" placeholder=\"e-mail address\" autoComplete=\"email\"\n                               onChange={(e) => setEmail(e.target.value)}\n                               className=\"block w-full py-3 px-1 mt-2\n                    text-gray-800 appearance-none\n                    border-b-2 border-gray-100\n                    focus:text-gray-500 focus:outline-none focus:border-gray-200\"\n                               required/>\n                        <label htmlFor=\"password\"\n                               className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Password</label>\n                        <input id=\"password\" type=\"password\" name=\"password\" placeholder=\"password\"\n                               onChange={(e) => setPassword(e.target.value)}\n                               autoComplete=\"current-password\"\n                               className=\"block w-full py-3 px-1 mt-2 mb-4\n                    text-gray-800 appearance-none\n                    border-b-2 border-gray-100\n                    focus:text-gray-500 focus:outline-none focus:border-gray-200\"\n                               required/>\n                        <button type=\"submit\"\n                                className=\"w-full py-3 mt-10 rounded-sm\n                    font-medium text-white uppercase\n                    focus:outline-none bg-indigo-600 hover:bg-indigo-800 hover:shadow-none\">\n                            Submit\n                        </button>\n                        <div className=\"sm:flex sm:flex-wrap mt-8 sm:mb-4 text-sm text-center\">\n                            <Link to=\"/SignIn\" className=\"flex-2 hover:text-indigo-600 underline\">\n                                Sign In with your account\n                            </Link>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SignUp;","export default __webpack_public_path__ + \"static/media/logo.18636f7a.png\";","import React, { useContext} from 'react';\nimport logo from \"../../assets/logo.png\"\nimport {BsChevronLeft, BsChevronRight} from 'react-icons/bs';\nimport GlobalContext from \"../../context/GlobalContext\";\n\nexport default function CalendarHeader(){\n\n    const {monthIndex, setMonthIndex} = useContext(GlobalContext);\n    const months = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\n    let year = new Date().getFullYear();\n    function handlePrevMonth() {\n       setMonthIndex(monthIndex-1);\n    }\n\n    function handleNextMonth() {\n        if ((monthIndex+1) % 12 === 0) {\n            year++;\n        }\n        setMonthIndex(monthIndex+1);\n\n    }\n\n    function handleReset(){\n        setMonthIndex(new Date().getMonth())\n    }\n    return (\n        <header className=\"px-4 py-2 flex items-center\">\n            <img src={logo} alt=\"logo calendar\" className=\"mr-2 w-20 h-12\"/>\n            <h1 className=\"mr-10 text-xl text-gray-500 fond-bold\">Friday Calendar</h1>\n            <button onClick={handleReset} className=\"border rounded py-2 px-4 mr-5\">Today</button>\n            <button onClick={handlePrevMonth}>\n                <i className=\"material-icons-outlined cursor-pointer text-gray-600 mx-5\"> <BsChevronLeft size={30}/> </i>\n            </button>\n            <button onClick={handleNextMonth}>\n                <i className=\"material-icons-outlined cursor-pointer text-gray-600 mx-5\"> <BsChevronRight size={30}/> </i>\n            </button>\n            <h2 className=\"ml-4 text-xl text-gray-500 fond-bold\">\n                {months[new Date(year, monthIndex).getMonth()]}\n            </h2>\n            <h2 className=\"ml-4 text-xl text-gray-500 fond-bold\">\n                {new Date(year, monthIndex).getFullYear()}\n            </h2>\n        </header>\n    );\n\n}\n","import React, {useContext} from \"react\";\nimport GlobalContext from \"../../context/GlobalContext\";\n\n\nexport default function Labels() {\n    const {labels, updateLabel} = useContext(GlobalContext);\n    return (\n        <React.Fragment>\n            <p className=\"text-gray-500 font-bold mt-10\">Label</p>\n            {labels.map(({label:lbl, checked}, index) => (\n                <label key={index} className=\"items-center, mt-12, block\">\n                    <input\n                        type=\"checkbox\"\n                        checked={checked}\n                        onChange={() => updateLabel({label:lbl, checked: !checked})}\n                        className={`h-5 w-5 rounded focus:ring-0 cursor-pointer`}\n                    />\n                    <span className={`ml-2 text-${lbl}-500 capitalize`}>{lbl}</span>\n                </label>\n            ))}\n        </React.Fragment>\n    );\n}","export default __webpack_public_path__ + \"static/media/plus.63ea019a.svg\";","\nimport React, {useContext} from 'react';\nimport plusSvg from '../../assets/plus.svg';\nimport GlobalContext from \"../../context/GlobalContext\";\n\n\nexport default function CreateEventButton() {\n\n\n    const {setShowEventModal} = useContext(GlobalContext);\n\n    return (\n      <button onClick={() => setShowEventModal(true)} className=\"border p-2 rounded-full flex items-center shadow-md hover:shadow-lg\">\n          <img src={plusSvg} alt=\"create event\" className=\"w-10 h-7\"/>\n          <span className=\"pl-3 pr-7\">Create event</span>\n      </button>\n    );\n}","export default __webpack_public_path__ + \"static/media/account.750c108a.png\";","import React, {useContext} from \"react\";\nimport GlobalContext from \"../../context/GlobalContext\";\nimport account from \"../../assets/account.png\";\nimport {getEventsFromApi} from \"../../utils/Function\";\n\n\nexport default function GoogleButton() {\n\n    const {idMember, dispatchCallEvent, savedEvents} = useContext(GlobalContext);\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        fetch(\"http://localhost:8080/SyncGoogle/\"+idMember,\n            {method: 'POST', headers: {\"content-type\": \"application/json\"}})\n            .then(response => {\n                response.json().then(resp => {\n                    if (resp === 200) {\n                        savedEvents.splice(0, savedEvents.length);\n                        getEventsFromApi(idMember, dispatchCallEvent, \"push\");\n                    }\n                });\n            });\n    };\n\n    return (\n        <button onClick={onSubmit} className=\"border p-2 rounded-full flex items-center shadow-md hover:shadow-lg mt-2\">\n            <img src={account} alt=\"sync google account\" className=\"w-7 h-7\"/>\n            <span className=\"pl-3 pr-7\">Sync Google</span>\n        </button>\n    );\n}","import React, {useContext} from 'react';\nimport Labels from \"./Labels\";\nimport CreateEventButton from \"./CreateEventButton\";\nimport GlobalContext from \"../../context/GlobalContext\";\nimport GoogleButton from \"./GoogleButton\";\nimport {getEventsFromApi} from \"../../utils/Function\";\n\n// url '/' are replace by '-' because fetch will\n// understand it as real url and will find it.\nexport default function SideBar() {\n    let url = \"\";\n    const {idMember, savedEvents, dispatchCallEvent} = useContext(GlobalContext);\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        fetch(\"http://localhost:8080/CalendarUrl/\" + url + \"&\" + idMember,\n            {method: 'POST', headers: {\"content-type\": \"application/json\"}})\n            .then(response => response.json().then(resp => {\n                if (resp === 200) {\n                    savedEvents.splice(0, savedEvents.length);\n                    getEventsFromApi(idMember, dispatchCallEvent, \"push\");\n                    console.log(savedEvents)\n                }\n            }));\n    }\n\n    return (\n        <aside className=\"border p-5 w-64\">\n            <CreateEventButton/>\n            <GoogleButton/>\n                <form onSubmit={onSubmit}>\n                    <input id=\"url\" type=\"text\" name=\"url\" placeholder=\"https://...calendar.ics\"\n                           className=\"block w-full py-3 px-1 mt-2 text-gray-800 appearance-none border-b-2 border-gray-100\n                           focus:text-gray-500 focus:outline-none focus:border-gray-200\"\n                           onChange={(e) => url = (e.target.value).replaceAll(\"/\", \"-\")}\n                            required/>\n                    <button className=\"hover:text-indigo-800\" type=\"submit\">\n                        Submit\n                    </button>\n                </form>\n            <Labels/>\n        </aside>\n    );\n}","import React, {useContext, useEffect, useState} from 'react';\nimport GlobalContext from \"../../context/GlobalContext\";\n\nexport default function Day({day, _, rowIdx, repeatedEvents}) {\n    \n    const [dayEvents, setDayEvents] = useState([]);\n    const {setDaySelected, setShowEventModal, setSelectedEvent, labels} = useContext(GlobalContext);\n\n    useEffect(() => {\n        const events = repeatedEvents.filter(evt => {\n            return evt.startDate === day.toLocaleString().split(\",\")[0];\n        });\n\n        setDayEvents(events);\n\n    }, [labels, repeatedEvents, day]);\n\n\n    \n    function displayCurrentDate(){\n        const today = new Date()\n         return day.getDate() === today.getDate() &&\n            day.getMonth() === today.getMonth() &&\n            day.getFullYear() === today.getFullYear()\n             ? 'bg-blue-500 text-white rounded-full w-4/5 ' : '';\n    }\n\n\n\n    return (\n        <div className=\"border border-gray-200 flex flex-col\">\n            <header className=\"flex flex-col items-center\">\n                {rowIdx === 0 && (<p className=\"text-sm mt-1\">{day.toDateString().split(\" \")[0].toUpperCase()}</p>)}\n                <p className={`text-sm p-1 my-1 text-center ${displayCurrentDate()}`}>\n                    {day.getDate()}\n                </p>\n            </header>\n            <div className=\"flex-1 cursor-pointer\" onClick={() => {\n                setDaySelected(day);\n                setShowEventModal(true);\n            }}>\n                {dayEvents.map((evt, index) => (\n                    <div onClick={() => setSelectedEvent(evt)} key={index} className={`bg-${evt.label}-200 p-1 m-3 text-gray-600 text-sm rounded mb-1 truncate flex items-center`}>\n                        {evt.title}\n                    </div>\n                ))}\n\n            </div>\n        </div>\n    );\n};","import React, {useContext, useEffect, useState} from 'react';\nimport Day from \"./Day\";\nimport GlobalContext from \"../../context/GlobalContext\";\n\n\nexport default function Month({month}) {\n\n    const [repeatedEvents, setRepeatedEvents] = useState([]);\n    const {filteredEvents} = useContext(GlobalContext);\n\n    useEffect(() => {\n        const repeatedEvents = [];\n        filteredEvents.forEach(evt => {\n            let eventCopy = {...evt};\n            repeatedEvents.push({...eventCopy});\n            const [day, month, year] = evt.startDate.split(\"/\");\n            const [endDay, endMonth, endYear] = evt.endDate.split(\"/\");\n            const endDate = new Date(parseInt(endYear), endMonth-1, parseInt(endDay));\n            let startDate = new Date(year, month-1, day);\n\n            switch (evt.repeat) {\n                case 'DAILY':\n                    while (startDate < endDate) {\n                        startDate.setDate(startDate.getDate()+1);\n                        eventCopy.startDate = startDate.toLocaleDateString();\n                        repeatedEvents.push({...eventCopy});\n                    }\n                    break;\n                case 'WEEKLY':\n                    while (startDate < endDate) {\n                        startDate.setDate(startDate.getDate()+7);\n                        eventCopy.startDate = startDate.toLocaleDateString();\n                        repeatedEvents.push({...eventCopy});\n                    }\n                    break;\n                case 'MONTHLY':\n                    while(startDate < endDate) {\n                        startDate.setMonth(startDate.getMonth()+1);\n                        eventCopy.startDate = startDate.toLocaleDateString();\n                        repeatedEvents.push({...eventCopy});\n                    }\n                    break;\n                case 'YEARLY':\n                    while (startDate < endDate) {\n                        startDate.setFullYear(startDate.getFullYear() + 1);\n                        eventCopy.startDate = startDate.toLocaleDateString();\n                        repeatedEvents.push({...eventCopy});\n                    }\n                    break;\n                default:\n                    break;\n            }\n        });\n        setRepeatedEvents(repeatedEvents);\n    }, [filteredEvents]);\n\n\n    return (\n     <div className=\"flex-1 grid grid-cols-7 grid-rows-5\">\n         {month.map((row, i) => (\n             <React.Fragment key={i}>\n                 {\n                     row.map((day, index) => (\n                         <Day day={day} key={index} rowIdx={i} repeatedEvents={repeatedEvents}/>\n                     ))\n                 }\n             </React.Fragment>\n         ))}\n     </div>\n    );\n\n}","\n\nexport function getMonth(month = new Date().getMonth()) {\n    const year = new Date().getFullYear();\n    const firstDayOfTheMonth = new Date(year, month, 1).getDay();\n    let currentMonthCount = 1 - firstDayOfTheMonth;\n    const daysMatrix = new Array(5).fill([]).map(() => {\n        return new Array(7).fill(null).map(() => {\n            currentMonthCount++;\n            return new Date(year, month, currentMonthCount);\n        });\n    });\n    return daysMatrix;\n}","import React from 'react';\n\n\nexport default function TimePicker ({hour, setHour, minute, setMinute}) {\n    if (hour === null) {\n        hour = \"\";\n    }\n    if (minute === null) {\n        minute = \"\";\n    }\n\n    let timers = {\n        hours: [],\n        minutes: []\n    };\n\n    let setHours = () => {\n        for (let i = 0; i < 24; i++) {\n            i < 10 ?\n                timers.hours.push(<option className={\"text-gray-600\"} key={'0' + i} value={'0' + i}>{'0' + i}</option>) :\n                timers.hours.push(<option className={\"text-gray-600\"} key={i} value={i}>{i}</option>)\n        }\n    }\n\n    let setMinutes =  () => {\n        for (let i = 0; i < 60; i++) {\n            i < 10 ?\n                timers.minutes.push(<option className={\"text-gray-600\"} key={'0' + i} value={'0' + i}>{'0' + i}</option>) :\n                timers.minutes.push(<option className={\"text-gray-600\"} key={i} value={i}>{i}</option>)\n        }\n    }\n    setHours()\n    setMinutes()\n\n    return (\n        <div className=\"flex ml-2 w-24 bg-white rounded-lg bg-gray-50 border border-gray-300\">\n            <select name=\"hours\"\n                    className=\"cursor-pointer hover:text-blue-600 ml-2 bg-transparent text-l appearance-none outline-none\"\n                    onChange={(e) => setHour(e.target.value)}\n                    value={hour}\n            >\n                {timers.hours.map((value, _) => {\n                    return value\n                })}\n            </select>\n            <span className=\"text-l mt-2 mr-2 ml-3 mb-1\">:</span>\n            <select name=\"minutes\"\n                    className=\"cursor-pointer hover:text-blue-600 bg-transparent text-l appearance-none outline-none mr-4\"\n                    onChange={(e) => setMinute(e.target.value)}\n                    value={minute}\n            >\n                {timers.minutes.map((value, _) => {\n                    return value\n                })}\n            </select>\n        </div>\n    );\n\n}","import React, {useContext, useState} from \"react\";\nimport {\n    MdBookmarkBorder,\n    MdCheck,\n    MdClose,\n    MdDelete,\n    MdDragHandle,\n    MdLocationOn,\n    MdSchedule,\n    MdSegment, MdTitle\n} from \"react-icons/all\";\nimport GlobalContext from \"../../context/GlobalContext\";\nimport TimePicker from \"./TimePicker\";\nimport {deleteEvent, getEventsFromApi} from \"../../utils/Function\";\n\nexport default function EventModal() {\n    const {setShowEventModal, daySelected, dispatchCallEvent, selectedEvent, setSelectedEvent, idMember} = useContext(GlobalContext);\n\n    const labelsClasses = [\n        \"indigo\",\n        \"gray\",\n        \"green\",\n        \"blue\",\n        \"red\",\n        \"purple\",\n    ];\n    const [allDay, setAllDay] = useState(selectedEvent ? selectedEvent.allDay : false);\n    const [title, setTitle] = useState(selectedEvent ? selectedEvent.title : '');\n    const [location, setLocation] = useState(selectedEvent ? selectedEvent.location : '');\n    const [description, setDescription] = useState(selectedEvent ? selectedEvent.description : '');\n    const [repeat, setRepeat] = useState(selectedEvent ? selectedEvent.repeat : \"NEVER\");\n    const [endDate, setEndDate] = useState(selectedEvent ? selectedEvent.endDate : \"00\");\n    const [startHour, setStartHour] = useState(selectedEvent ? selectedEvent.startHour : \"01\");\n    const [endHour, setEndHour] = useState(selectedEvent ? selectedEvent.endHour :\"01\");\n    const [startMinute, setStartMinute] = useState(selectedEvent ? selectedEvent.startMinute : \"00\");\n    const [endMinute, setEndMinute] = useState(selectedEvent ? selectedEvent.endMinute : \"00\");\n    const [selectedLabel, setSelectedLabel] = useState(\n        selectedEvent\n            ? labelsClasses.find((lbl) => lbl === selectedEvent.label)\n            : labelsClasses[0]\n    );\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        const dayStr = daySelected.toLocaleDateString()\n            .replaceAll(\"/\", \"-\")\n            .split('-')\n            .reverse()\n            .join('-')\n            + \" \" + startHour + \":\" + startMinute + \":00\";\n        const newEnDate = endDate + \" \" + endHour + \":\" + endMinute + \":00\";\n        if (selectedEvent) {\n            fetch(\"http://localhost:8080/UpdateEvent/\"+ selectedEvent.id + \"&\" + title + \"&\" + description + \"&\"+ dayStr + \"&\" + newEnDate + \"&\" +\n                location + \"&\" + idMember + \"&\" + allDay + \"&\" + repeat + \"&\" + selectedLabel,\n                {method: 'POST', headers: {\"content-type\": \"application/json\"}})\n                .then(response => {\n                    response.json().then(resp => {\n                        if (resp === 200) {\n                            getEventsFromApi(idMember, dispatchCallEvent, \"update\",);\n                            setShowEventModal(false);\n                        }\n                    });\n                });\n        }else {\n            fetch(\"http://localhost:8080/SaveEvent/\" + title + \"&\" + description + \"&\"+ dayStr + \"&\" + newEnDate + \"&\" +\n                location + \"&\" + idMember + \"&\" + allDay + \"&\" + repeat + \"&\" + selectedLabel,\n                {method: 'POST', headers: {\"content-type\": \"application/json\"}})\n                .then(response => {\n                    response.json().then(resp => {\n                        if (resp === 200) {\n                            getEventsFromApi(idMember, dispatchCallEvent, \"push\");\n                            setShowEventModal(false);\n                        }\n                    });\n                });\n        }\n\n    };\n\n    return (\n        <div className=\"h-screen w-full fixed left-0 top-0 flex justify-center items-center\">\n            <form className=\"bg-white rounded-lg shadow-2xl w-1/2\" onSubmit={onSubmit}>\n                <header className=\"bg-gray-100 px-4 py-2 flex justify-between items-center\">\n                  <span className=\"material-icons-outlined text-gray-400\">\n                      <MdDragHandle/>\n                  </span>\n                    {selectedEvent && (\n                        <span onClick={() => {\n                            dispatchCallEvent({type: \"delete\", payload: selectedEvent});\n                            setShowEventModal(false);\n                            setSelectedEvent(null);\n                            deleteEvent(selectedEvent.id);\n                        }} className=\"material-icons-outlined text-gray-400 cursor-pointer\">\n                          <MdDelete/>\n                        </span>\n                    )}\n                    <div>\n                        <button onClick={() => {setShowEventModal(false); setSelectedEvent(null)}}>\n                        <span className=\"material-icons-outlined text-gray-400\">\n                          <MdClose/>\n                        </span>\n                        </button>\n                    </div>\n\n                </header>\n                <div className=\"p-3\">\n                    <div className=\"grid grid-cols-1/5 items-end gap-y-7\">\n\n                        {/* SELECTED DAY */}\n                        <span className=\"material-icons-outlined text-gray-400 mr-8\">\n                          <MdSchedule size={25}/>\n                        </span>\n                        <p>{daySelected.toDateString()}</p>\n\n                        {/* TITLE */}\n                        <span className=\"material-icons-outlined text-gray-400 mr-8\">\n                          <MdTitle size={25}/>\n                        </span>\n                        <input\n                            type=\"text\"\n                            name=\"description\"\n                            placeholder=\"Title\"\n                            value={title}\n                            onChange={(e) => setTitle(e.target.value)}\n                            className=\"pt-3 border-0 text-gray-600 text-xl font-medium pb-2 w-full border-b-2 border-gray-200 focus:outline-none focus-ring-0 focus:border-blue-500\"\n                            required\n                        />\n\n                        {/* Location */}\n                        <span className=\"material-icons-outlined text-gray-400 mr-8\">\n                          <MdLocationOn size={25}/>\n                        </span>\n                        <input\n                            type=\"text\"\n                            name=\"description\"\n                            placeholder=\"Location\"\n                            value={location}\n                            onChange={(e) => setLocation(e.target.value)}\n                            className=\"pt-3 border-0 text-gray-600 text-xl font-medium pb-2 w-full border-b-2 border-gray-200 focus:outline-none focus-ring-0 focus:border-blue-500\"\n                            required\n                        />\n\n                        {/* ALL DAY */}\n                        <span className=\"text-gray-400 mr-8\">\n                          <p>All day</p>\n                        </span>\n                        <div\n                            className={\"md:w-14 md:h-7 w-12 h-6 flex items-center rounded-full p-1\" +\n                            \"cursor-pointer \" + (allDay ? \"bg-blue-500\" : \"bg-gray-300\")}\n                            onClick={() => {\n                                setAllDay(!allDay);\n                            }}\n                        >\n                            <div\n                                className={\"bg-white md:w-6 md:h-6 h-5 w-5 rounded-full shadow-md\" +\n                                \"transform\" + (allDay ? \" transform translate-x-7\" : null)}\n                            >\n                            </div>\n                        </div>\n\n                        {/* DATE PICKER */}\n                        <span className=\"text-gray-400 mr-8\">\n                          <p>Starts</p>\n                        </span>\n                        <div>\n                            <div className=\"relative\">\n                                <div className=\"flex absolute inset-y-0 left-0 items-center pl-3 pointer-events-none\">\n                                    <svg className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" fill=\"currentColor\"\n                                         viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path fillRule=\"evenodd\"\n                                              d=\"M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z\"\n                                              clipRule=\"evenodd\"/>\n                                    </svg>\n                                </div>\n                                <div className={\"flex\"}>\n                                    <p className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-36 pl-10 p-2.5  dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\">\n                                        {daySelected.toLocaleString().substring(0, 10)}\n                                    </p>\n                                    {!allDay ? <TimePicker hour={startHour} setHour={setStartHour} minute={startMinute} setMinute={setStartMinute}/> : <div/>}\n                                </div>\n                            </div>\n                        </div>\n                        <span className=\"text-gray-400 mr-8\">\n                          <p>Ends</p>\n                        </span>\n                        <div>\n                            <div className=\"relative\">\n                                <div className=\"flex absolute inset-y-0 left-0 items-center pl-3 pointer-events-none\">\n                                    <svg className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" fill=\"currentColor\"\n                                         viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path fillRule=\"evenodd\"\n                                              d=\"M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z\"\n                                              clipRule=\"evenodd\"/>\n                                    </svg>\n                                </div>\n                                <div className={\"flex\"}>\n                                    <input name=\"end\" type=\"date\"\n                                           className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-36 pl-10 p-2.5  dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                                           value={endDate === \"00\" ? daySelected.toLocaleString().substring(0, 10) : endDate.toLocaleString().substring(0, 10)}\n                                           onChange={(date) => setEndDate(date.target.value)}\n                                           required\n                                    />\n                                    {!allDay ? <TimePicker hour={endHour} setHour={setEndHour} minute={endMinute} setMinute={setEndMinute}/> : <div/> }\n                                </div>\n                            </div>\n                        </div>\n\n                        {/* REPEAT */}\n                        <span className=\"text-gray-400 mr-8\">\n                          <p>Repeat</p>\n                        </span>\n                        <div>\n                            <div className=\"flex h-10 w-28 bg-white rounded-lg bg-gray-50 border border-gray-300\">\n                                <select name=\"repeat\"\n                                        className=\"text-center cursor-pointer hover:text-blue-600 bg-transparent text-l appearance-none outline-none mr-4\"\n                                        onChange={(e) => setRepeat(e.target.value)}\n                                >\n                                    <option className={\"text-gray-600\"} value=\"NEVER\" selected={repeat === \"NEVER\" ? \"selected\" : null }>Never</option>\n                                    <option className={\"text-gray-600\"} value=\"DAILY\" selected={repeat === \"DAILY\" ? \"selected\" : null }>Every Day</option>\n                                    <option className={\"text-gray-600\"} value=\"WEEKLY\" selected={repeat === \"WEEKLY\" ? \"selected\" : null } >Every Week</option>\n                                    <option className={\"text-gray-600\"} value=\"MONTHLY\" selected={repeat === \"MONTHLY\" ? \"selected\" : null }>Every Month</option>\n                                    <option className={\"text-gray-600\"} value=\"YEARLY\" selected={repeat === \"YEARLY\" ? \"selected\" : null }>Every Year</option>\n                                </select>\n                            </div>\n                        </div>\n                        {/* DESCRIPTION */}\n                        <span className=\"material-icons-outlined text-gray-400 mr-8\">\n                          <MdSegment size={25}/>\n                        </span>\n                        <input\n                            type=\"text\"\n                            name=\"title\"\n                            placeholder=\"Description\"\n                            value={description}\n                            onChange={(e) => setDescription(e.target.value)}\n                            required\n                            className=\"pt-3 border-0 text-gray-600 pb-2 w-full border-b-2 border-gray-200 focus:outline-none focus-ring-0 focus:border-blue-500\"\n                        />\n\n                        {/* COLOR PICKER */}\n                        <span className=\"material-icons-outlined text-gray-400 mr-8\">\n                          <MdBookmarkBorder size={25}/>\n                        </span>\n                        <div className=\"flex gap-x-2\">\n                            {labelsClasses.map((lblClass, i) => (\n                                <span\n                                    key={i}\n                                    className={`bg-${lblClass}-500 w-6 h-6 rounded-full flex items-center justify-center cursor-pointer`}\n                                    onClick={() => setSelectedLabel(lblClass)}\n                                >\n                                  {selectedLabel === lblClass &&\n                                  <span className=\"material-icons-outlined text-white text-sm\">\n                                      <MdCheck size={15}/>\n                                  </span>}\n\n                              </span>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n                <footer className=\"flex justify-end border-t p-3 mt-5\">\n                    <button type=\"submit\"\n                            className=\"bg-blue-500 hover:bg-blue px-6 py-2 rounded text-white\">\n                        <p>Save</p>\n                    </button>\n                </footer>\n            </form>\n        </div>\n    );\n}","import {useContext, useEffect, useState} from \"react\";\nimport GlobalContext from \"../../context/GlobalContext\";\n\n\nexport default function DistanceMatrix({latitude, longitude}) {\n\n    const [bicycleDuration, setBicycleDuration] = useState(\"\");\n    const [carDuration, setCarDuration] = useState(\"\");\n    const [distance, setDistance] = useState(\"\");\n    const {savedEvents} = useContext(GlobalContext);\n    const localisation = savedEvents.at(0).location;\n\n    useEffect( () => {\n\n        fetch(\"http://localhost:8080/fetchData/\"+latitude+\"&\"+longitude+\"&\"+localisation+\"&bicycling\",\n            {method: 'POST', headers: {\"content-type\": \"application/json\"}})\n            .then(response => {\n                response.json().then(resp => {\n                    console.log(resp);\n                    if (resp !== null) {\n                        console.log(resp);\n                    }\n                });\n            });\n    }, [savedEvents, latitude, longitude, localisation]);\n\n    return (\n        <div className=\"bg-indigo-600\">\n            <div className=\"max-w-7xl mx-auto py-3 px-3 sm:px-6 lg:px-8\">\n                <div className=\"flex items-center justify-between flex-wrap\">\n                    <div className=\"w-0 flex-1 flex items-center\">\n            <span className=\"flex p-2 rounded-lg bg-indigo-800\">\n            </span>\n                <p className=\"ml-3 font-medium text-white truncate\">\n                    <span className=\"md:hidden\">Smart intel !</span>\n                    <span className=\"hidden md:inline\">You 're {distance} away from {localisation}</span><br />\n                    <span className=\"hidden md:inline\">You 'll need {bicycleDuration} to reach {localisation} at foot</span><br />\n                    <span className=\"hidden md:inline\">You 'll need {carDuration} to reach {localisation} with a car</span><br />\n                </p>\n                    </div>\n                    <div className=\"order-2 flex-shrink-0 sm:order-3 sm:ml-3\">\n                        <button\n                            type=\"button\"\n                            className=\"-mr-1 flex p-2 rounded-md hover:bg-indigo-500 focus:outline-none focus:ring-2 focus:ring-white sm:-mr-2\"\n                        >\n                            <span className=\"sr-only\">Dismiss</span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n}","import React, {useState, useContext, useEffect} from 'react';\nimport CalendarHeader from \"./CalendarHeader\";\nimport SideBar from \"./SideBar\";\nimport Month from \"./Month\";\nimport {getMonth} from \"../../utils/date\";\nimport GlobalContext from \"../../context/GlobalContext\";\nimport EventModal from \"./EventModal\";\nimport DistanceMatrix from \"./DistanceMatrix\";\n\n\nexport default function Calendar({latitude, longitude}) {\n    const [currentMonth, setCurrentMonth] = useState(getMonth());\n    const {monthIndex, showEventModal, savedEvents} = useContext(GlobalContext);\n\n    useEffect(() => {\n        setCurrentMonth(getMonth(monthIndex));\n    }, [monthIndex]);\n\n\n    return (\n        <React.Fragment>\n            {savedEvents.length > 0 && savedEvents.at(0).startDate === new Date().toLocaleString().substring(0, 10) && <DistanceMatrix latitude={latitude} longitude={longitude} />}\n            {showEventModal && <EventModal />}\n            <div className=\"h-screen flex flex-col\">\n                <CalendarHeader />\n                <div className=\"flex flex-1\">\n                    <SideBar />\n                    <Month month={currentMonth}/>\n                </div>\n            </div>\n        </React.Fragment>\n\n    );\n}\n\n\n","import React, {useContext, useEffect, useState} from 'react';\nimport GlobalContext from \"../context/GlobalContext\";\nimport {buildEventDate} from \"../utils/Function\";\n\nexport default function SmartInformation() {\n    const {savedEvents} = useContext(GlobalContext);\n    const [today, setDate] = useState(new Date());\n    let nextEventDate = null;\n    let timeBeforeEvent;\n\n    if (savedEvents.length !== 0) {\n        let nextEvent = null;\n        for (let i = 0; i < savedEvents.length; i++) {\n            if (today < buildEventDate(savedEvents[i])) {\n                nextEvent = savedEvents[i];\n                break;\n            }\n        }\n        if (nextEvent !== null) {\n            nextEventDate = buildEventDate(nextEvent);\n            timeBeforeEvent = new Date(Math.abs(today - nextEventDate))\n            timeBeforeEvent.setHours(timeBeforeEvent.getHours() - 1);\n            timeBeforeEvent = new Date(timeBeforeEvent).toLocaleTimeString('fr-FR', {\n                hour: 'numeric',\n                hour24: true,\n                minute: 'numeric',\n                second: 'numeric'\n            });\n        }\n    }\n\n    useEffect(() => {\n        const timer = setInterval(() => {\n            setDate(new Date());\n        }, 1000);\n        return () => {\n            clearInterval(timer);\n        }\n    }, []);\n\n    return (\n        <div className=\"bg-gray-50\">\n            <div\n                className=\"max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:py-16 lg:px-8 lg:flex lg:items-center lg:justify-between\">\n                <h2 className=\"text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\n                    <span className=\"block text-indigo-600\">\n                        {nextEventDate !== null ?\n                            nextEventDate > today ?\n                                <span className=\"block\">Next event in {timeBeforeEvent}</span>\n                                : 'No event !' :\n                            'No event !'}</span>\n                </h2>\n                <div className=\"mt-8 flex lg:mt-0 lg:flex-shrink-0\">\n                    <div className=\"inline-flex rounded-md shadow\">\n                        <p\n                           className=\"inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600\">\n                            Info traffic\n                        </p>\n                    </div>\n                    <div className=\"ml-3 inline-flex rounded-md shadow\">\n                        <p\n                           className=\"inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-indigo-600\">\n                            Info traffic\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    );\n}\n","import React, {useContext, useEffect, useState} from 'react';\nimport GlobalContext from \"../context/GlobalContext\";\nimport {buildEventDate} from \"../utils/Function\";\n\nexport default function Events() {\n    const {savedEvents} = useContext(GlobalContext);\n    const [today, setDate] = useState(new Date());\n\n    useEffect(() => {\n        const timer = setInterval(() => {\n            setDate(new Date());\n        }, 1000);\n        return () => {\n            clearInterval(timer);\n        }\n    }, []);\n\n    return (\n        <div className=\"flex flex-col\">\n            <div className=\"-my-2 overflow-x-auto\">\n                <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n                    <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n                        <table className=\"min-w-full divide-y divide-gray-200\">\n                            <thead className=\"bg-gray-50\">\n                            <tr>\n                                <th scope=\"col\"\n                                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                >\n                                    Title\n                                </th>\n                                <th scope=\"col\"\n                                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                >\n                                    Location\n                                </th>\n                                <th scope=\"col\"\n                                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                >\n                                    Description\n                                </th>\n                                <th scope=\"col\"\n                                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                >\n                                    Date (start/end)\n                                </th>\n                                <th scope=\"col\"\n                                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                >\n                                    Hourly (start/end)\n                                </th>\n                                <th scope=\"col\"\n                                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                >\n                                    Repeat\n                                </th>\n                            </tr>\n                            </thead>\n                            <tbody className=\"bg-white divide-y divide-gray-200\">\n                            {savedEvents\n                                .map((event) => {\n                                    if ((new Date().toLocaleString().substring(0, 10) === event.startDate) && (today < buildEventDate(event))) {\n                                        return <tr key={event.id}>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <div className=\"flex items-center\">\n                                                    <div className=\"flex-shrink-0 h-10 w-10\">\n                                                        {event.title}\n                                                    </div>\n                                                </div>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <div className=\"text-sm text-gray-900\">{event.location}</div>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <div className=\"text-sm text-gray-900\">{event.description}</div>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <div className=\"text-sm text-gray-900\">{event.startDate}</div>\n                                                <div className=\"text-sm text-gray-900\">{event.endDate}</div>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                                                <div\n                                                    className=\"text-sm text-gray-900\">{event.startHour}:{event.startMinute}:00\n                                                </div>\n                                                <div\n                                                    className=\"text-sm text-gray-900\">{event.endHour}:{event.endMinute}:00\n                                                </div>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                                                <div className=\"text-sm text-gray-900\">{event.repeat}</div>\n                                            </td>\n                                        </tr>\n                                    } else {\n                                        return <span/>\n                                    }\n                                })}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass Home extends Component {\n    render() {\n        return (\n            <main className=\"mt-10 h-screen mx-auto max-w-7xl px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28\">\n                <div className=\"sm:text-center lg:text-left\">\n                    <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-6xl\">\n                        <span className=\"block xl:inline\">Welcome to </span>{' '}\n                        <span className=\"block text-indigo-600 xl:inline\">LK'application Friday</span>\n                    </h1>\n                    <p className=\"mt-3 text-base text-gray-500 sm:mt-5 sm:text-lg sm:max-w-xl sm:mx-auto md:mt-5 md:text-xl lg:mx-0\">\n                        Friday is an assistant managing an agenda that will help you not to be late for\n                        your appointments.\n                    </p>\n                    <div className=\"mt-5 sm:mt-8 sm:flex sm:justify-center lg:justify-start\">\n                        <div className=\"rounded-md shadow\">\n                            <Link to='/SignUp'\n                                className=\"w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 md:py-4 md:text-lg md:px-10\"\n                            >\n                                Get started\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            </main>\n        );\n    }\n}\n\nexport default Home;","import React, {Component} from 'react';\nimport Header from './components/Header'\nimport SignIn from \"./components/SignIn\";\nimport SignUp from \"./components/SignUp\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Calendar from \"./components/calendar/Calendar\";\nimport SmartInformation from \"./components/SmartInformation\";\nimport Events from \"./components/Events\";\nimport Home from \"./components/Home\";\n\nclass App extends Component {\n    state = {\n        isLoggedIn: false,\n        latitude: 0,\n        longitude: 0\n    }\n\n    handleIsLoggedIn = isLoggedIn => {\n        this.setState({isLoggedIn: isLoggedIn});\n    }\n\n    save({latitude, longitude}) {\n        this.setState({latitude: latitude, longitude: longitude});\n    }\n\n    componentDidMount() {\n        navigator.geolocation.getCurrentPosition((position) => {\n            const latitude = position.coords.latitude;\n            const longitude = position.coords.longitude;\n            this.save({latitude: latitude, longitude: longitude});\n            console.log(\"Latitude is :\", position.coords.latitude);\n            console.log(\"Longitude is :\", position.coords.longitude);\n        });\n    }\n\n    render() {\n        if (this.state.isLoggedIn) {\n            return (\n                <div className=\"App\">\n                    <Router>\n                        <Header isLoggedIn={this.state.isLoggedIn} onLoggedInChange={this.handleIsLoggedIn}/>\n                        <Switch>\n                            <Route exact path='/SignIn'><SignIn/></Route>\n                            <Route exact path='/SignUp'><SignUp/></Route>\n                            <Route exact path='/'><SmartInformation/><Events/><Calendar latitude={this.state.latitude} longitude={this.state.longitude}/></Route>\n                        </Switch>\n                    </Router>\n                </div>\n            );\n        }\n        return (\n            <div className=\"App\">\n                <Router>\n                    <Header/>\n                    <Switch>\n                        <Route exact path='/'><Home/></Route>\n                        <Route exact path='/SignIn'><SignIn onLoggedInChange={this.handleIsLoggedIn}/></Route>\n                        <Route exact path='/SignUp'><SignUp/></Route>\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {useEffect, useMemo, useReducer, useState} from 'react';\nimport GlobalContext from \"./GlobalContext\";\n\nfunction savedEventReducer(state, {type, payload}) {\n    switch (type) {\n        case \"push\":\n            let is_present = false\n            state.forEach(evt => is_present = evt.id === payload.id ? true : is_present);\n            if (!is_present) {\n                return [...state, payload]\n            } else {\n                return state\n            }\n        case \"update\":\n            return state.map(evt => evt.id === payload.id ? payload : evt);\n        case \"delete\":\n            return state.filter(evt => evt.id !== payload.id);\n        case \"clear\":\n            return state.filter(_ => false);\n        default:\n            throw new Error();\n    }\n}\n\n\nfunction initEvents() {\n    const storageEvents = localStorage.getItem(\"savedEvents\");\n    return storageEvents ? JSON.parse(storageEvents) : [];\n}\n\nexport default function ContextWrapper(props){\n    const [monthIndex, setMonthIndex] = useState(new Date().getMonth());\n    const [idMember, setIdMember] = useState(0);\n    const [showEventModal, setShowEventModal] = useState(false);\n    const [selectedEvent, setSelectedEvent] = useState(null);\n    const [daySelected, setDaySelected] = useState(new Date());\n    const [savedEvents, dispatchCallEvent] = useReducer(savedEventReducer, [], initEvents);\n    const [labels, setLabels] = useState([]);\n\n    const filteredEvents = useMemo(() => {\n        return savedEvents.filter(evt =>\n            labels\n                .filter(lbl => lbl.checked)\n                .map(lbl=> lbl.label)\n                .includes(evt.label)\n        )\n    },[savedEvents, labels])\n\n    useEffect(() => {\n        localStorage.setItem(\"savedEvents\", JSON.stringify(savedEvents));\n    }, [savedEvents]);\n\n    useEffect(() => {\n        setLabels((prevLabels) => {\n            return [...new Set(savedEvents.map(evt => evt.label) )].map(label => {\n                const currentLabel = prevLabels.find(lbl => lbl.label === label);\n                return {\n                    label,\n                    checked:currentLabel ? currentLabel.checked : true\n                };\n            });\n        });\n    }, [savedEvents]);\n\n    useEffect(() => {\n        if (!showEventModal) {\n            setSelectedEvent(null);\n        }\n    }, [showEventModal, setShowEventModal]);\n\n\n    function updateLabel(label){\n        setLabels(labels.map((lbl) => lbl.label === label.label ? label : lbl));\n    }\n\n    return (\n      <GlobalContext.Provider value={{\n          monthIndex,\n          setMonthIndex,\n          showEventModal,\n          setShowEventModal,\n          daySelected,\n          setDaySelected,\n          dispatchCallEvent,\n          savedEvents,\n          selectedEvent,\n          setSelectedEvent,\n          labels,\n          setLabels,\n          updateLabel,\n          filteredEvents,\n          idMember,\n          setIdMember\n      }}>\n          {props.children}\n      </GlobalContext.Provider>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ContextWrapper from \"./context/ContextWrapper\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <ContextWrapper>\n          <App />\n      </ContextWrapper>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}